{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
#ifdef VS \
 \
precision highp float;\
attribute vec3 position;\
attribute vec3 normal;\
uniform mat3 normalMatrix;\
uniform mat4 modelViewMatrix;\
uniform mat4 projectionMatrix;\
varying vec3 fNormal;\
varying vec3 fPosition;\
\
void main()\
\{\
  \
  fNormal = normalize(normalMatrix * normal);\
  vec4 pos = modelViewMatrix * vec4(position, 1.0);\
  fPosition = pos.xyz;\
  gl_Position = projectionMatrix * pos;\
\}\
 \
#else \
 \
precision highp float;\
varying vec3 fNormal;\
varying vec3 fPosition;\
\
void main()\
\{\
  // the normal vector\
  vec3 n = normalize(fNormal);\
  // vector pointing to the eye\
  vec3 e = normalize(-fPosition);\
  \
  // vector pointing to light Source\
  vec3 light_Source =  vec3(0.0,1.0,0.0);\
  // normalized vector pointing to light source\
  vec3 l = normalize(light_Source);\
  \
  // the halfway vector between e and l\
  vec3 h = normalize(e+l);\
  //specular lighting color\
  vec3 specular_Color = vec3(1.0,1.0,1.0);\
  // specular lighting\
  vec3 specular = 12.0 * pow(max(0.0,dot(n,h)),70.0) * specular_Color;\
  \
  // diffuse lighting color\
  vec3 diffuse_Color = vec3(1.0,1.0,1.0);\
  // diffuse lighting\
  vec3 diffuse = 1.2 * max(0.0,dot(n,l)) * diffuse_Color;\
  \
  // ambient lighting \
  vec3 ambient = .2 * fNormal;\
  \
  // all the lighting components combined\
  vec3 lighting = ambient + diffuse + specular;\
  \
  gl_FragColor = vec4((lighting - fPosition), 1.0);\
\}\
 \
#endif}